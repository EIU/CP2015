import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;

public class GEN_EIENCRYPT {

	static int[] small_primes = new int[]{
			977609, 978017, 978277, 978617
			, 977611, 978031, 978283, 978619
			, 977629, 978037, 978287, 978643
			, 977671, 978041, 978323, 978647
			, 977681, 978049, 978337, 978683
			, 977693, 978053, 978343, 978689
			, 977719, 978067, 978347, 978697
			, 977723, 978071, 978349, 978713
			, 977747, 978073, 978359, 978727
			, 977761, 978077, 978389, 978743
			, 977791, 978079, 978403, 978749
			, 977803, 978091, 978413, 978773
			, 977813, 978113, 978427, 978797
			, 977819, 978149, 978449, 978799
			, 977831, 978151, 978457, 978821
			, 977849, 978157, 978463, 978839
			, 977861, 978179, 978473, 978851
			, 977881, 978181, 978479, 978853
			, 977897, 978203, 978491, 978863
			, 977923, 978209, 978511, 978871
			, 977927, 978217, 978521, 978883
			, 977971, 978223, 978541, 978907
			, 978001, 978233, 978569, 978917
			, 978007, 978239, 978599, 978931
			, 978011, 978269, 978611, 978947
			, 978973, 979291, 979709, 980137
			, 978997, 979313, 979717, 980149
			, 979001, 979327, 979747, 980159
			, 979009, 979333, 979757, 980173
			, 979031, 979337, 979787, 980179
			, 979037, 979343, 979807, 980197
			, 979061, 979361, 979819, 980219
			, 979063, 979369, 979831, 980249
			, 979093, 979373, 979873, 980261
			, 979103, 979379, 979883, 980293
			, 979109, 979403, 979889, 980299
			, 979117, 979423, 979907, 980321
			, 979159, 979439, 979919, 980327
			, 979163, 979457, 979921, 980363
			, 979171, 979471, 979949, 980377
			, 979177, 979481, 979969, 980393
			, 979189, 979519, 979987, 980401
			, 979201, 979529, 980027, 980417
			, 979207, 979541, 980047, 980423
			, 979211, 979543, 980069, 980431
			, 979219, 979549, 980071, 980449
			, 979229, 979553, 980081, 980459
			, 979261, 979567, 980107, 980471
			, 979273, 979651, 980117, 980489
			, 979283, 979691, 980131, 980491
			, 980503, 980893, 981199, 981517
			, 980549, 980897, 981209, 981523
			, 980557, 980899, 981221, 981527
			, 980579, 980909, 981241, 981569
			, 980587, 980911, 981263, 981577
			, 980591, 980921, 981271, 981587
			, 980593, 980957, 981283, 981599
			, 980599, 980963, 981287, 981601
			, 980621, 980999, 981289, 981623
			, 980641, 981011, 981301, 981637
			, 980677, 981017, 981311, 981653
			, 980687, 981023, 981319, 981683
			, 980689, 981037, 981373, 981691
			, 980711, 981049, 981377, 981697
			, 980717, 981061, 981391, 981703
			, 980719, 981067, 981397, 981707
			, 980729, 981073, 981419, 981713
			, 980731, 981077, 981437, 981731
			, 980773, 981091, 981439, 981769
			, 980801, 981133, 981443, 981797
			, 980803, 981137, 981451, 981809
			, 980827, 981139, 981467, 981811
			, 980831, 981151, 981473, 981817
			, 980851, 981173, 981481, 981823
			, 980887, 981187, 981493, 981887
			, 981889, 982211, 982613, 982939
			, 981913, 982213, 982621, 982967
			, 981919, 982217, 982633, 982973
			, 981941, 982231, 982643, 982981
			, 981947, 982271, 982687, 983063
			, 981949, 982273, 982693, 983069
			, 981961, 982301, 982697, 983083
			, 981979, 982321, 982703, 983113
			, 981983, 982337, 982741, 983119
			, 982021, 982339, 982759, 983123
			, 982057, 982343, 982769, 983131
			, 982061, 982351, 982777, 983141
			, 982063, 982363, 982783, 983149
			, 982067, 982381, 982789, 983153
			, 982087, 982393, 982801, 983173
			, 982097, 982403, 982819, 983179
			, 982099, 982453, 982829, 983189
			, 982103, 982489, 982841, 983197
			, 982117, 982493, 982843, 983209
			, 982133, 982559, 982847, 983233
			, 982147, 982571, 982867, 983239
			, 982151, 982573, 982871, 983243
			, 982171, 982577, 982903, 983261
			, 982183, 982589, 982909, 983267
			, 982187, 982603, 982931, 983299
	};

	static int[] large_primes = new int[]{
			1019071, 1019413, 1019717, 1020037
			, 1019077, 1019423, 1019723, 1020043
			, 1019093, 1019443, 1019729, 1020049
			, 1019119, 1019449, 1019731, 1020059
			, 1019129, 1019453, 1019741, 1020077
			, 1019173, 1019467, 1019747, 1020079
			, 1019177, 1019471, 1019771, 1020101
			, 1019197, 1019479, 1019783, 1020109
			, 1019209, 1019503, 1019801, 1020113
			, 1019237, 1019509, 1019819, 1020137
			, 1019251, 1019531, 1019827, 1020143
			, 1019257, 1019533, 1019839, 1020157
			, 1019261, 1019537, 1019849, 1020163
			, 1019267, 1019549, 1019857, 1020223
			, 1019273, 1019563, 1019861, 1020233
			, 1019281, 1019617, 1019873, 1020247
			, 1019297, 1019639, 1019899, 1020259
			, 1019329, 1019647, 1019903, 1020269
			, 1019339, 1019657, 1019927, 1020293
			, 1019351, 1019663, 1019971, 1020301
			, 1019353, 1019687, 1020001, 1020329
			, 1019357, 1019693, 1020007, 1020337
			, 1019377, 1019699, 1020011, 1020353
			, 1019399, 1019701, 1020013, 1020361
			, 1019411, 1019713, 1020023, 1020379
			, 1020389, 1020757, 1021019, 1021301
			, 1020401, 1020779, 1021043, 1021303
			, 1020407, 1020797, 1021067, 1021327
			, 1020413, 1020821, 1021073, 1021331
			, 1020419, 1020823, 1021081, 1021333
			, 1020431, 1020827, 1021087, 1021367
			, 1020451, 1020839, 1021091, 1021369
			, 1020457, 1020841, 1021093, 1021373
			, 1020491, 1020847, 1021123, 1021381
			, 1020517, 1020853, 1021127, 1021387
			, 1020529, 1020881, 1021129, 1021403
			, 1020541, 1020893, 1021157, 1021417
			, 1020557, 1020907, 1021159, 1021429
			, 1020583, 1020913, 1021183, 1021441
			, 1020589, 1020931, 1021199, 1021457
			, 1020599, 1020959, 1021217, 1021463
			, 1020619, 1020961, 1021243, 1021483
			, 1020631, 1020967, 1021253, 1021487
			, 1020667, 1020973, 1021259, 1021541
			, 1020683, 1020977, 1021261, 1021561
			, 1020689, 1020979, 1021271, 1021571
			, 1020707, 1020989, 1021283, 1021577
			, 1020709, 1020991, 1021289, 1021621
			, 1020743, 1020997, 1021291, 1021627
			, 1020751, 1021001, 1021297, 1021651
	};

	public static void main(String[] args) throws Exception {

		for (int t = 10; t < 20; t++) {
			gen(t);
		}
	}

	public static String randString(int minLen, int maxLen) {
		int len = randBetween(minLen, maxLen);
		char[] chars = new char[len];
		for (int i = 0; i < len; i++) {
			chars[i] = (char) randBetween('a', 'z' + 1);
		}
		return new String(chars);
	}

	public static int randBetween(int start, int end) {
		if (start == end) {
			end++;
		}
		return start
				+ (int) Math.floor(Math.random() * (end - start - 0.000001));
	}

	public static void gen(int id) throws IOException {
		String root = "F:\\GitHub\\CP2015\\Ngoc-Java\\Spoj\\";
		String javaClass = "EIENCRYPT";

		String outPath = root + javaClass + "\\";
		File theDir = new File(outPath);
		theDir.mkdir();

		String inFilename = outPath + id + ".in";
		String outFilename = outPath + id + ".out";

		FileWriter in = new FileWriter(inFilename);
		FileWriter out = new FileWriter(outFilename);

		for (int t = 0; t < 4; t++) {

			BigInteger inNumber = BigInteger.ONE;
			int smallest = 1000000;

			int[] primes = small_primes;
			for (int i = 0; i < 50; i++) {
				int number = primes[randBetween(0, primes.length)];
				smallest = Math.min(smallest, number);
				inNumber = inNumber.multiply(BigInteger.valueOf(number));
			}

			in.write(inNumber.toString() + " 1000000\r\n");
			//			out.write("GOOD\r\n");
			out.write("BAD " + smallest + "\r\n");
		}

		in.write("2736533057692132382293351057482950793942062629822529022050458099098981999400621988630082303870073440529867709959700304673654628272300904101526674190122306937687613462427702319984609844400593410025806346101230376049506788214785559879149466663920107680626457055386597039125473398319793262004596701508471 1000000\r\n0 0");
		out.write("GOOD\r\n");

		//		in.write("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999924165887 1000000\r\n0 0");
		//		out.write("BAD 100043\r\n");
		in.close();
		out.close();
	}
}
